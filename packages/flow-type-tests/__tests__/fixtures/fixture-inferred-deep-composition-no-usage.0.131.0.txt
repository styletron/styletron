Error --------------------------- packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:15:2

Cannot create `Qux` element because property `foo` is missing in props [1] but exists in object type [2].
[incompatible-use]

   packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:15:2
   15| <Qux bar="bar" baz="baz" qux="qux" />; // Missing foo
        ^^^

References:
   packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:15:1
   15| <Qux bar="bar" baz="baz" qux="qux" />; // Missing foo
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:7:20
    7| const Foo = styled<{foo: "foo"}>("div", (_props: {foo: "foo"}) => ({
                          ^^^^^^^^^^^^ [2]


Error --------------------------- packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:17:2

Cannot create `Qux` element because string [1] is incompatible with string literal `foo` [2] in property `foo`.
[incompatible-use]

   packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:17:2
   17| <Qux foo="notfoo" bar="bar" baz="baz" qux="qux" />; // Wrong foo
        ^^^

References:
   packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:17:10
   17| <Qux foo="notfoo" bar="bar" baz="baz" qux="qux" />; // Wrong foo
                ^^^^^^^^ [1]
   packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:7:26
    7| const Foo = styled<{foo: "foo"}>("div", (_props: {foo: "foo"}) => ({
                                ^^^^^ [2]


Error --------------------------- packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:19:2

Cannot create `Qux` element because property `bar` is missing in props [1] but exists in object type [2].
[incompatible-use]

   packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:19:2
   19| <Qux foo="foo" baz="baz" qux="qux" />; // Missing bar
        ^^^

References:
   packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:19:1
   19| <Qux foo="foo" baz="baz" qux="qux" />; // Missing bar
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:10:37
   10| const Bar = withStyle(Foo, (_props: {bar: "bar"}) => ({color: "red"}));
                                           ^^^^^^^^^^^^ [2]


Error --------------------------- packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:21:2

Cannot create `Qux` element because string [1] is incompatible with string literal `bar` [2] in property `bar`.
[incompatible-use]

   packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:21:2
   21| <Qux foo="foo" bar="notbar" baz="baz" qux="qux" />; // Wrong bar
        ^^^

References:
   packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:21:20
   21| <Qux foo="foo" bar="notbar" baz="baz" qux="qux" />; // Wrong bar
                          ^^^^^^^^ [1]
   packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:10:43
   10| const Bar = withStyle(Foo, (_props: {bar: "bar"}) => ({color: "red"}));
                                                 ^^^^^ [2]


Error --------------------------- packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:23:2

Cannot create `Qux` element because property `baz` is missing in props [1] but exists in object type [2].
[incompatible-use]

   packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:23:2
   23| <Qux foo="foo" bar="bar" qux="qux" />; // Missing baz
        ^^^

References:
   packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:23:1
   23| <Qux foo="foo" bar="bar" qux="qux" />; // Missing baz
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:11:37
   11| const Baz = withStyle(Bar, (_props: {baz: "baz"}) => ({color: "red"}));
                                           ^^^^^^^^^^^^ [2]


Error --------------------------- packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:25:2

Cannot create `Qux` element because string [1] is incompatible with string literal `baz` [2] in property `baz`.
[incompatible-use]

   packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:25:2
   25| <Qux foo="foo" bar="bar" baz="notbaz" qux="qux" />; // Wrong baz
        ^^^

References:
   packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:25:30
   25| <Qux foo="foo" bar="bar" baz="notbaz" qux="qux" />; // Wrong baz
                                    ^^^^^^^^ [1]
   packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:11:43
   11| const Baz = withStyle(Bar, (_props: {baz: "baz"}) => ({color: "red"}));
                                                 ^^^^^ [2]


Error --------------------------- packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:27:2

Cannot create `Qux` element because property `qux` is missing in props [1] but exists in object type [2].
[incompatible-use]

   packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:27:2
   27| <Qux foo="foo" bar="bar" baz="baz" />; // Missing qux
        ^^^

References:
   packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:27:1
   27| <Qux foo="foo" bar="bar" baz="baz" />; // Missing qux
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:12:37
   12| const Qux = withStyle(Baz, (_props: {qux: "qux"}) => ({color: "red"}));
                                           ^^^^^^^^^^^^ [2]


Error --------------------------- packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:29:2

Cannot create `Qux` element because string [1] is incompatible with string literal `qux` [2] in property `qux`.
[incompatible-use]

   packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:29:2
   29| <Qux foo="foo" bar="bar" baz="baz" qux="notqux" />; // Wrong qux
        ^^^

References:
   packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:29:40
   29| <Qux foo="foo" bar="bar" baz="baz" qux="notqux" />; // Wrong qux
                                              ^^^^^^^^ [1]
   packages/flow-type-tests/__tests__/fixtures/inferred-deep-composition-no-usage.js:12:43
   12| const Qux = withStyle(Baz, (_props: {qux: "qux"}) => ({color: "red"}));
                                                 ^^^^^ [2]



Found 8 errors

Only showing the most relevant union/intersection branches.
To see all branches, re-run Flow with --show-all-branches
